@page "/deleteActivitylog/{CurrentId}"
@attribute [Authorize(Roles = "Admin")]
@using ActivityLogs.Data
@inject ActivityLogService objEmpService
@inject NavigationManager NavigationManager


<h2>Delete</h2>
<h3>Are you sure you want to delete?</h3>
<br />
<div class="col-md-4">
    <table class="table">
        <tr>
            <td>Name</td>
            <td>@objAct.Date.ToString("MM-dd-yyyy")</td>
        </tr>
        <tr>
            <td>Activity Description</td>
            <td>
                <textarea id="TextAreas" rows="2" cols="20" @bind="@objAct.ActivityDescription" readonly></textarea>

            </td>
        </tr>
        <tr>
            <td>How I Feel?</td>
            <td>@objAct.HowIFeel</td>
        </tr>
        <tr>
            <td>Duration (Hours)</td>
            <td>@objAct.Duration</td>
        </tr>
        <tr>
            <td>Priority</td>
            <td>@objAct.Value</td>
        </tr>

    </table>
    <div class="form-group">
        <input type="button" class="btn btn-danger" @onclick="@Delete" value="Delete" />

        <input type="button" class="btn btn-light" @onclick="@cancel" value="Cancel" />
    </div>
</div>
<style>
    .btn-light {
        color: #212529;
        background-color: #e0e1e2;
        border-color: #f8f9fa;
    }
    .sidebar {
        width: 16%;
    }
</style>
@code {
    [Parameter]
    public string CurrentId { get; set; }
    ActivityLogs.Data.ActivityLog objAct = new ActivityLogs.Data.ActivityLog();
    protected override async Task OnInitializedAsync()
    {
        objAct = await Task.Run(() => objEmpService.ActivityLogDetails(Convert.ToInt32(CurrentId)));
    }
    protected void Delete()
    {
        objEmpService.DeleteActivity(objAct.ActivityId);
        NavigationManager.NavigateTo("/");
    }
    void cancel()

    {
        NavigationManager.NavigateTo("/");
    }
}
